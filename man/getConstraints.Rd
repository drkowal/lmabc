% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getConstraints.R
\name{getConstraints}
\alias{getConstraints}
\title{Generating the Constraint Matrix for Abundance-Based Constraints (ABCs)}
\usage{
getConstraints(formula, data, cprobs = NULL)
}
\arguments{
\item{formula}{an object of class "\code{\link[=formula]{formula()}}" (or one that can be coerced to that class); a symbolic description of the model to be fitted.}

\item{data}{a data frame (or object coercible by \code{as.data.frame} to a data frame) containing the variables in the model.}

\item{cprobs}{an optional named list with an entry for each named categorical variable in the model, specifying the probabilities of each category, which must sum to 1. By default, \code{cprobs} will be calculated from the proportions in the data.}
}
\description{
\code{getConstraints} is used to generate the constraint matrix for linear regression with ABCs.
}
\section{Details}{
The constraint matrix incorporates all the constraints present in the regression. Under the reference group encoding, this is equivalent to a vector with a single 1 in the slot designated as the reference for each categorical variable. We suggest using population or sample (default) proportions.

\code{cprobs} must include every level for all categorical predictors and all interactions that include at least one categorical predictor. It should be a named list of named vectors.

This method is called by \code{\link[=lmabc]{lmabc()}}. This method is useful for implementing additional variations of the ABCs.
}

\section{Value}{
\code{getConstraints} returns a matrix representing the constraint matrix for a particular regression model.
}

\examples{
getConstraints(Sepal.Length ~ Petal.Length + Species + Petal.Length*Species, data = iris)

}
\seealso{
\code{\link[=lmabc]{lmabc()}} for a use case of \code{getConstraints}.
}
