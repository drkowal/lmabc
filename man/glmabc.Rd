% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glmabc.R
\name{glmabc}
\alias{glmabc}
\title{Fitting Generalized Linear Models with Abundance-Based Constraints}
\usage{
glmabc(formula, family = stats::gaussian, data, ..., cprobs = NULL)
}
\arguments{
\item{formula}{an object of class \code{"\link[stats]{formula}"} (or one that
    can be coerced to that class): a symbolic description of the
    model to be fitted.  The details of model specification are given
    under \sQuote{Details}.}

\item{family}{a description of the error distribution and link
    function to be used in the model.  For \code{glm} this can be a
    character string naming a family function, a family function or the
    result of a call to a family function.  For \code{glm.fit} only the
    third option is supported.  (See \code{\link[stats]{family}} for details of
    family functions.)}

\item{data}{a data frame (or object coercible by \code{as.data.frame} to a data frame) containing the variables in the model.}

\item{...}{
    For \code{glm}: arguments to be used to form the default
    \code{control} argument if it is not supplied directly.

    For \code{weights}: further arguments passed to or from other methods.
  }

\item{cprobs}{a named list with an entry for each named categorical variable in the model, specifying the probabilities of each category.}
}
\description{
\code{glmabc} is used to fit generalized linear models using abundance-based constraints. Like \code{\link[stats:glm]{stats::glm}}, the model is specified by giving a symbolic description of the linear predictor and a description of the error distribution.
}
\section{Details}{
A \code{glmabc} model is specified identically to the corresponding \code{glm} model. At this time, \code{glmabc} only supports a single response variable, and the data must be passed into the \code{data} parameter.
}

\section{Differences from \code{glm}}{
Standard generalized linear regression models chose one level for each categorical factor and make it a "baseline," which is necessary to not over-parameterize the model. The coefficients on the continuous \eqn{X} variables are specifically for the baseline category and do not represent a global effect. Similarly, the coefficients on the non-baseline levels are in comparison to the baseline level.

This framework can lead to biases in interpretation. Suppose a researcher includes \code{age} and \code{race} as explanatory variables. \code{glm} will report the coefficient for \code{age}, which is really the baseline-specific coefficient for \code{age}; the baseline is generally chosen to be the most prevalent category, often non-Hispanic White (NHW). Thus, the coefficient for NHW is implicitly represented as the global intercept or, with interaction terms, effect. The coefficient for any other race dummy is the expected change compared to the baselineâ€”again, not the true effect of identifying as that race.

\code{glmabc} introduces abundance-based constraints. Each "baseline" coefficient now represents the group-averaged coefficient with weights given by the sample proportions or by \code{cprobs}. For instance, the coefficient on \code{age} is the weighted average of each race-specific effect.
}

\section{Value}{
\code{glmabc} returns an object of classes "glmabc" and "lmabc." Many generics commonly used for \code{glm} objects have been implemented for \code{glmabc}: \code{summary}, \code{coefficients}, \code{plot}, \code{predict}, and more. See the DESCRIPTION file for all implemented S3 methods.
}

\examples{
mtcars$cyl <- as.factor(mtcars$cyl)
fit <- glmabc(am ~ mpg + cyl + mpg:cyl, family = "binomial", data = mtcars)
summary(fit)

predict(fit, newdata = data.frame(mpg = 21, cyl = "6"))

}
\seealso{
\code{\link[stats:glm]{stats::glm()}} for the standard generalized linear regression implementation in R.
}
